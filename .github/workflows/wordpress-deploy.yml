name: Deploy to WordPress.org

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
      dry_run:
        description: 'Dry run (true/false)'
        required: false
        default: 'true'

jobs:
  deploy:
    name: Deploy to WordPress.org
    runs-on: ubuntu-latest
    if: github.repository == 'jameswlepage/rsl-wp' # Only run on main repo
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Install dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Deploying version: $VERSION"

    - name: Validate version format
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Invalid version format: $VERSION (expected: x.y.z)"
          exit 1
        fi

    - name: Run tests before deployment
      run: |
        echo "Running tests before deployment..."
        composer install --dev
        vendor/bin/phpunit tests/unit/TestBasicFunctionality.php tests/unit/TestRSLLicense.php
        echo "Tests passed ✅"

    - name: Prepare plugin for WordPress.org
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        
        # Update version in plugin file
        sed -i "s/Version: .*/Version: $VERSION/" rsl-licensing.php
        sed -i "s/RSL_PLUGIN_VERSION\", \".*\"/RSL_PLUGIN_VERSION\", \"$VERSION\"/" rsl-licensing.php
        
        # Update stable tag in readme.txt if it exists
        if [ -f readme.txt ]; then
          sed -i "s/Stable tag: .*/Stable tag: $VERSION/" readme.txt
          sed -i "s/Tested up to: .*/Tested up to: 6.4/" readme.txt
        fi
        
        # Create WordPress.org compatible readme.txt from README.md
        if [ ! -f readme.txt ]; then
          echo "Creating readme.txt for WordPress.org..."
          cat > readme.txt << 'EOF'
=== RSL Licensing for WordPress ===
Contributors: jameswlepage
Tags: licensing, rsl, ai-licensing, content-licensing, machine-readable, oauth, jwt
Requires at least: 5.0
Tested up to: 6.4
Requires PHP: 7.4
Stable tag: $VERSION
License: GPL v2 or later
License URI: https://www.gnu.org/licenses/gpl-2.0.html

Complete Really Simple Licensing (RSL) support for WordPress sites. Define machine-readable licensing terms for your content, enabling AI companies, crawlers, and other automated systems to properly license your digital assets.

== Description ==

RSL Licensing for WordPress provides comprehensive Really Simple Licensing (RSL) support with built-in OAuth 2.0 license server functionality. Perfect for content creators who want to define clear, machine-readable licensing terms for AI training, web crawling, and automated content usage.

= Key Features =

* **Full RSL 1.0 Specification Support** - Complete implementation of the official RSL standard
* **OAuth 2.0 License Server** - Built-in authentication and token management
* **Multiple Integration Methods** - HTML head, HTTP headers, robots.txt, RSS feeds
* **WooCommerce Integration** - Automated payment processing for paid licenses
* **Professional Admin Interface** - Visual license builder with live XML generation
* **Security Features** - Rate limiting, JWT tokens, crawler authentication
* **Developer API** - REST endpoints and WordPress Abilities API integration

= License Types Supported =

* **Free Content** - Open access with usage restrictions
* **Paid Licensing** - One-time purchase or subscription models  
* **Attribution Required** - Creative Commons integration
* **AI Training Controls** - Granular AI usage permissions
* **Geographic Restrictions** - Country/region-based licensing

= Payment Processing =

* **WooCommerce Integration** - Supports all WooCommerce payment gateways
* **OAuth 2.0 Authentication** - Secure client credential authentication
* **Automatic Token Management** - JWT-based tokens with expiration
* **Refund Protection** - Automatic token revocation on refunds/cancellations

== Installation ==

1. Upload the plugin files to `/wp-content/plugins/rsl-licensing/`
2. Activate the plugin through the 'Plugins' menu in WordPress
3. Navigate to 'RSL Licensing' in your admin menu to configure
4. Create your first license and set global licensing preferences

== Frequently Asked Questions ==

= Is this compatible with existing copyright notices? =

Yes! RSL complements traditional copyright notices by making them machine-readable.

= Can I use this with Creative Commons licenses? =

Absolutely! RSL supports standard license references including Creative Commons.

= Does this work with caching plugins? =

Yes, RSL works with caching plugins since licensing information is embedded during page generation.

== Changelog ==

= $VERSION =
* See GitHub releases for detailed changelog

== Upgrade Notice ==

= $VERSION =
Latest release with enhanced features and security improvements.
EOF
          sed -i "s/\$VERSION/$VERSION/g" readme.txt
        fi

    - name: WordPress.org SVN Deploy
      if: github.event.inputs.dry_run != 'true'
      uses: 10up/action-wordpress-plugin-deploy@stable
      env:
        SVN_USERNAME: ${{ secrets.WP_ORG_USERNAME }}
        SVN_PASSWORD: ${{ secrets.WP_ORG_PASSWORD }}
        SLUG: rsl-licensing
        VERSION: ${{ steps.version.outputs.version }}

    - name: Dry run summary
      if: github.event.inputs.dry_run == 'true'
      run: |
        echo "## Dry Run Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔍 **Dry run completed successfully**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Files prepared for WordPress.org deployment**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "To deploy for real, run this workflow again with dry_run=false" >> $GITHUB_STEP_SUMMARY